defaultTasks 	/* Core */					'microlog4android-core:clean', 'microlog4android-core:build',
				/* Core tests */			'microlog4android-core-tests:clean', 'microlog4android-core-tests:test',
				/* slf4j impl */			'microlog4android-slf4j-impl:clean', 'microlog4android-slf4j-impl:build',
				/* package modules */		'clean', 'copyJarToIntegrationTests'


allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	
	repositories {
		mavenCentral()
		mavenRepo urls: "file://" + System.getProperty('user.home') + "/.m2/repository/"
	}
	
	sourceCompatibility = source
	version = microlog4androidVersion
}


/*
 * MAIN BUILD 
 */
dependsOn(':microlog4android-slf4j-impl')

dependencies {
	// microlog4android
	compile fileTree(dir: 'microlog4android-core/build/libs', include: 'microlog4android-core*.jar')
	compile fileTree(dir: 'microlog4android-slf4j-impl/build/libs', include: 'microlog4android-slf4j-impl*.jar')
}

jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

tempJarFiles = buildDirName + '/tmp-classes'

task unpackFatJar(dependsOn: jar) << {
	copy {
		jarFile = findMicrologJar()

	    from zipTree(jarFile)
		include '**/*.class'
		into tempJarFiles
	}
}

task deleteUnusedJar(dependsOn: unpackFatJar) << {
	findMicrologJar().delete()
}

/*
 * Returns the microlog4android jar-file.
 */
private File findMicrologJar() {
	File[] distsDirContent = libsDir.listFiles()

	File micrologJar = null
	for(File file : distsDirContent) {
		if(file.getName().contains('microlog4android')) {
			micrologJar = file
		}
	}
	
	return micrologJar
}

task packageJar(dependsOn: deleteUnusedJar, type: Zip) {
	extension = 'jar'
	from tempJarFiles
}

/*
 * Copies the packaged jar file into the integration-tests project
 */
task copyJarToIntegrationTests(dependsOn: packageJar) << {
	ant.mkdir(dir: 'microlog4android-integration-tests/libs')
	
	copy {
		from distsDir
		include '*.jar'
		into 'microlog4android-integration-tests/libs'
	}
}