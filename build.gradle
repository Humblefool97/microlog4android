defaultTasks 	/* Core */					'microlog4android-core:clean', 'microlog4android-core:build',
				/* Core tests */			'microlog4android-core-tests:clean', 'microlog4android-core-tests:test',
				/* slf4j impl */			'microlog4android-slf4j-impl:clean', 'microlog4android-slf4j-impl:build',
				/* package modules */		'clean', 'packageJar'
				
subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	
	repositories {
		mavenCentral()
		mavenRepo urls: "file://" + System.getProperty('user.home') + "/.m2/repository/"
	}
		
	sourceCompatibility = source
	version = microlog4androidVersion
}



/*
 * MAIN BUILD 
 */
dependsOn(':microlog4android-slf4j-impl')

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

repositories {
	mavenCentral()
	mavenRepo urls: "file://" + System.getProperty('user.home') + "/.m2/repository/"
}

sourceCompatibility = source
version = microlog4androidVersion

dependencies {
	// microlog4android
	compile fileTree(dir: 'microlog4android-core/build/libs', include: 'microlog4android-core*.jar')
	compile fileTree(dir: 'microlog4android-slf4j-impl/build/libs', include: 'microlog4android-slf4j-impl*.jar')
}

jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

tempJarFiles = buildDirName + '/tmp-classes'

task unpackFatJar(dependsOn: jar) << {
	copy {
		jarFile = libsDir.listFiles()[0]
	    from zipTree(jarFile)
		include '**/*.class'
		into tempJarFiles
	}
}

task deleteUnusedJar(dependsOn: unpackFatJar) << {
	libsDir.listFiles()[0].delete()
}

task packageJar(dependsOn: deleteUnusedJar, type: Zip) {
	from tempJarFiles
	extension = 'jar'
}